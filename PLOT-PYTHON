'''
Programa: Led Blink

Proposito: Verificar funcionamento de placa ESP32

Programadores: Facundo Cosentino, Sergio Zelaya
Fecha: 1/08/2022
'''

'''
-------------------------------------
Librerias a Utilizar 
-------------------------------------
'''
import serial                         #Libreria para manejo de UART
import numpy as np                    #Libreria para manejo de arrays 
import matplotlib.pyplot as plt       #Libreria para hacer graficas

'''
-------------------------------------
Configuracion de comunicacion UART
-------------------------------------
'''

ser = serial.Serial()                    #Elejimos el puerto y lo configuramos
ser.port = 'COM5'
ser.baudrate = 9600
ser.open()

'''
-------------------------------------
Declaracion de variable
-------------------------------------
'''

muestras=300                                  #Cantidad de muestras

x = np.ones(muestras).reshape(muestras,1)     #Array avacio para eje X
y = np.ones(muestras).reshape(muestras,1)     #Array avacio para eje Y
z = np.ones(muestras).reshape(muestras,1)     #Array avacio para eje Z
 
t = np.arange(0,muestras/10, 0.1, dtype=float).reshape(muestras,1)  #Base de tiempo para abscisa en graficas
tm=np.arange(0,muestras, 1, dtype=float).reshape(muestras,1)        #Numero de muestras para abscisa en grafica

'''
----------------------------------
Funcion para descomponer String
----------------------------------
'''
def descomponer(cadena):           #ingresa cadena
  for x in range(len(cadena)):     #Iteramos cadena y determinamos si el caracter es distento de un numero     
      if (cadena[x] != '0') and (cadena[x] != '1') and (cadena[x] != '2') and (cadena[x] != '3') and (cadena[x] != '4') and (cadena[x] != '5') and (cadena[x] != '6') and (cadena[x] != '7') and (cadena[x] != '8') and (cadena[x] != '9'):
        cadena = cadena.replace(cadena[x],' ') # remplazamos si es distinto de un numero por un espacio en blanco

  cadena = cadena.replace(' ' ,'')  #Remplazamos los espacion en blanco logrando borrarlos de la cadena
  return int(cadena)                #convertimos este string en un entero

'''
------------------------------------
Programa principal
------------------------------------
'''
while True:

  entrada=input('Ingrese 1 para proceder: ')

  if(entrada == '1'):
  
    for i in range(muestras):                 #Iteramos la cantidad de muestras
      
        dato = ser.readline()                 #Leemos el puerto serie
        print(dato)
        cadena = str(dato)                    #convertimos el dato typo byte en un tipo string
        print(cadena)
        ex,ey,ez = cadena.split(sep=',')      #separamos los datos X Y Z
        print(ex)
        print(ey)
        print(ez)
        
        cadena=str(ex)                        #convertimos el dato X de un string a int
        ex = descomponer(cadena)
        print(ex)
        cadena=str(ey)                        #convertimos el dato Y de un string a int
        ey = descomponer(cadena)
        print(ey)
        cadena=str(ez)                        #convertimos el dato Z de un string a int
        ez = descomponer(cadena)
        print(ez)

        x[i,0]=ex/100                         #Armamos el arreglo X
        y[i,0]=ey/100                         #Armamos el arreglo Y
        z[i,0]=ez/100                         #Armamos el arreglo Z
    

    '''
    ------------------------------------
    Mostramos los datos
    ------------------------------------
    '''
    print("-----------Datos en eje X-------------------")
    print(x)
    print("-----------Datos en eje Y-------------------")
    print(y)
    print("-----------Datos en eje Y-------------------")
    print(z)

    '''
    ------------------------------------
    Graficamos los datos
    ------------------------------------
    '''
    plt.title('Curva de Aceleracion')
    plt.xlabel('Tiempo')
    plt.ylabel('Aceleracion')
    plt.plot(tm,x,label="X")
    plt.plot(tm,y,label="Y")
    plt.plot(tm,z,label="Z")
    plt.grid(alpha=0.4,color="SteelBlue",linestyle="-",linewidth=1.5)
    plt.legend()
    plt.show()
    break
  
  else:
    print('Programa Cancelado')
    break
