'''
Programa: PLOT-PYTHON

Proposito: Recepcion de datos de sensor MPU-6050
y graficas de los ejes X,Y,Z

Programadores: Facundo Cosentino, Sergio Zelaya
Fecha: 2/08/2022

Rectificacion: ingresar la cantidad de muestras
por teclado y enviar al microcontrolador
'''


'''
-------------------------------------
Librerias a Utilizar 
-------------------------------------
'''
#Libreria para manejo de Tiempos
import time
#Libreria para manejo de UART
import serial
#Libreria para manejo de arrays 
import numpy as np
#Libreria para hacer graficas
import matplotlib.pyplot as plt       

'''
-------------------------------------
Configuracion de comunicacion UART
-------------------------------------
'''
#Elejimos el puerto y lo configuramos
ser = serial.Serial()                    
ser.port = 'COM9'
ser.baudrate = 9600
ser.open()

'''
-------------------------------------
Declaracion de variable
-------------------------------------
'''
#Cantidad de muestras
#muestras=150                                  

'''
----------------------------------
Funcion para descomponer String
----------------------------------
'''
def descomponer(cadena): #ingresa cadena

  #Remplazamos los 'b por ' '
  cadena = cadena.replace("b'"," ")
  #Remplazamos los ' por ' '
  cadena = cadena.replace("'"," ")
  #Remplazamos los \\n por ' '
  cadena = cadena.replace("\\n"," ")
  #Remplazamos los espacion en blanco
  #logrando borrarlos de la cadena
  cadena = cadena.replace(" " ,"")  

  #convertimos este string en un entero                                  
  return int(cadena)                

'''
------------------------------------
Programa principal
------------------------------------
'''
while True:

  entrada=input('Ingrese 1 para proceder: ')

  ser.flushInput()  #Vaciamos el buffer serial
  
  ser.write(b'1\n') #Mandamos una bandera para
                    #saber que debe empezar
                    #a transmitir datos
                    
  muestras=input('Ingrese cantidad de muestras: ')
  bmuestras=muestras+'\n'
  bmuestras=bmuestras.encode()
  
  ser.write(bmuestras) #Mandamos cantidad
                       #de muestra que queremos
                       
  muestras=int(muestras)

  '''
  -------------------------------------
  Declaracion de variable en tiempo de
  ejecucion
  -------------------------------------
  '''

  #Array avacio para eje X, Y, Z
  x = np.ones(muestras).reshape(muestras,1)    
  y = np.ones(muestras).reshape(muestras,1)     
  z = np.ones(muestras).reshape(muestras,1)

  #Base de tiempo  
  t = np.arange(0,muestras/10, 0.1, dtype=float)
  t = t.reshape(muestras,1)
  #Numero de muestras
  tm=np.arange(0,muestras, 1, dtype=float)
  tm=tm.reshape(muestras,1)
  
  if(entrada == '1'):

    #Iteramos la cantidad de muestras
    for i in range(muestras):                 

        #Leemos el puerto serie      
        dato = ser.readline()
        #convertimos el dato typo byte
        #en un tipo string
        cadena = str(dato)                    

        #separamos los datos X Y Z                                     
        ex,ey,ez = cadena.split(sep=',')      

        #--- Convertimos X Y Z a tipo int ---
        
        cadena=str(ex)                                                                   
        ex = descomponer(cadena)
        cadena=str(ey)                                                               
        ey = descomponer(cadena)
        cadena=str(ez)                                                     
        ez = descomponer(cadena)

        #---Armamos los arreglos ---
        x[i,0]=ex/100   #Armamos el arreglo X
        y[i,0]=ey/100   #Armamos el arreglo Y
        z[i,0]=ez/100   #Armamos el arreglo Z
    

    '''
    ------------------------------------
    Mostramos los datos
    ------------------------------------
    '''
    print("-----------Datos en eje X--------------")
    print(x)
    print("-----------Datos en eje Y--------------")
    print(y)
    print("-----------Datos en eje Y--------------")
    print(z)

    '''
    ------------------------------------
    Graficamos los datos
    ------------------------------------
    '''
    #Titulo de la grafica
    plt.title('Curva de Aceleracion')
    #label de absicas
    plt.xlabel('Muestras')
    #label de ordenadas
    plt.ylabel('Aceleracion')
    #plot x en funcion de muestra
    plt.plot(tm,x,label="X")
    #plot y en funcion de muestras
    plt.plot(tm,y,label="Y")
    #plot z en funcion de muestras
    plt.plot(tm,z,label="Z")
    #activamos el grid
    plt.grid(alpha=0.4,color="SteelBlue",linestyle="-",linewidth=1.5)
    #activamos los carteles
    plt.legend()
    #mostramos las curvas
    plt.show()                            
    break
  
  else:
    #programa cancelado
    print('Programa Cancelado')           #programa cancelado
    break
